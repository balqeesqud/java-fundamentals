/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package linter;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;

import java.io.File;

import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    @Test void appHasAGreeting() {
        linter.App classUnderTest = new linter.App();
        assertNotNull(classUnderTest.getGreeting(), "app should have a greeting");
    }
    @Test
    public void testNoErrors() {
        File testFile = new File("testFiles/noErrors.js");
        String errorMessage = linter.App.findMissingSemicolons(testFile);
        assertNull(errorMessage);
    }

    @Test
    public void testSingleError() {
        File testFile = new File("linter/SingleError.js");
        String errorMessage = linter.App.findMissingSemicolons(testFile);
        assertNotNull(errorMessage);
        assertFalse(errorMessage.contains("Missing semicolon"));
    }

    @Test
    public void testFewErrors() {
        File testFile = new File("linter/FewErrors.js");
        String errorMessage = linter.App.findMissingSemicolons(testFile);
        assertNotNull(errorMessage);
        assertFalse(errorMessage.contains("Missing semicolon"));
    }

    @Test
    public void testManyErrors() {
        File testFile = new File("linter/ManyErrors.js");
        String errorMessage = linter.App.findMissingSemicolons(testFile);
        assertNotNull(errorMessage);
        assertFalse(errorMessage.contains("Missing semicolon"));
    }

    @Test
    public void testEmptyFile() {
        File testFile = new File("testFiles/emptyFile.js");
        String errorMessage = linter.App.findMissingSemicolons(testFile);
        assertNull(errorMessage);
    }

}
